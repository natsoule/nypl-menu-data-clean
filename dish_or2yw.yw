#@begin Linear_OR #@desc Linear OpenRefine Workflow
#@param newColumnName:first_appeared_clean
#@param col-name:times_appeared
#@param expression:value.trim()
#@param col-name:description
#@param col-name:name
#@param expression:value.toNumber()
#@param col-name:first_appeared_clean
#@param col-name:highest_price
#@param col-name:id
#@param newColumnName:name_cluster
#@param newColumnName:last_appeared_clean
#@param col-name:name_case
#@param expression:value.toUppercase()
#@param col-name:menus_appeared
#@param col-name:first_appeared
#@param col-name:lowest_price
#@param col-name:name_cluster
#@param col-name:last_appeared_clean
#@param expression:value.replace(/\s+/,'_')
#@param newColumnName:name_case
#@param col-name:last_appeared
#@in table0
#@out table22
#@begin core/text-transform0#@desc Text transform on cells in column id using expression value.toNumber()
#@param col-name:id
#@param expression:value.toNumber()
#@in table0
#@out table1
#@end core/text-transform0
#@begin core/text-transform1#@desc Text transform on cells in column name using expression value.trim()
#@param col-name:name
#@param expression:value.trim()
#@in table1
#@out table2
#@end core/text-transform1
#@begin core/text-transform2#@desc Text transform on cells in column name using expression value.replace(/\s+/,' ')
#@param col-name:name
#@param expression:value.replace(/\s+/,'_')
#@in table2
#@out table3
#@end core/text-transform2
#@begin core/column-addition0#@desc Create column name_case at index 2 based on column name using expression jython:return value
#@param col-name:name
#@param newColumnName:"name_case"
#@in table3
#@out table4
#@end core/column-addition0
#@begin core/text-transform3#@desc Text transform on cells in column name_case using expression value.toUppercase()
#@param col-name:name_case
#@param expression:value.toUppercase()
#@in table4
#@out table5
#@end core/text-transform3
#@begin core/column-addition1#@desc Create column name_cluster at index 3 based on column name_case using expression jython:return value
#@param col-name:name_case
#@param newColumnName:"name_cluster"
#@in table5
#@out table6
#@end core/column-addition1
#@begin core/mass-edit0#@desc Mass edit cells in column name_cluster
#@param col-name:name_cluster
#@in table6
#@out table7
#@end core/mass-edit0
#@begin core/column-removal0#@desc Remove column description
#@param col-name:description
#@in table7
#@out table8
#@end core/column-removal0
#@begin core/text-transform4#@desc Text transform on cells in column menus_appeared using expression value.toNumber()
#@param col-name:menus_appeared
#@param expression:value.toNumber()
#@in table8
#@out table9
#@end core/text-transform4
#@begin core/text-transform5#@desc Text transform on cells in column times_appeared using expression value.toNumber()
#@param col-name:times_appeared
#@param expression:value.toNumber()
#@in table9
#@out table10
#@end core/text-transform5
#@begin core/column-addition2#@desc Create column first_appeared_clean at index 7 based on column first_appeared using expression jython:return value
#@param col-name:first_appeared
#@param newColumnName:"first_appeared_clean"
#@in table10
#@out table11
#@end core/column-addition2
#@begin core/mass-edit1#@desc Mass edit cells in column first_appeared_clean
#@param col-name:first_appeared_clean
#@in table11
#@out table12
#@end core/mass-edit1
#@begin core/mass-edit2#@desc Mass edit cells in column first_appeared_clean
#@param col-name:first_appeared_clean
#@in table12
#@out table13
#@end core/mass-edit2
#@begin core/mass-edit3#@desc Mass edit cells in column first_appeared_clean
#@param col-name:first_appeared_clean
#@in table13
#@out table14
#@end core/mass-edit3
#@begin core/text-transform6#@desc Text transform on cells in column first_appeared_clean using expression value.toNumber()
#@param col-name:first_appeared_clean
#@param expression:value.toNumber()
#@in table14
#@out table15
#@end core/text-transform6
#@begin core/column-addition3#@desc Create column last_appeared_clean at index 9 based on column last_appeared using expression jython:return value
#@param col-name:last_appeared
#@param newColumnName:"last_appeared_clean"
#@in table15
#@out table16
#@end core/column-addition3
#@begin core/mass-edit4#@desc Mass edit cells in column last_appeared_clean
#@param col-name:last_appeared_clean
#@in table16
#@out table17
#@end core/mass-edit4
#@begin core/mass-edit5#@desc Mass edit cells in column last_appeared_clean
#@param col-name:last_appeared_clean
#@in table17
#@out table18
#@end core/mass-edit5
#@begin core/mass-edit6#@desc Mass edit cells in column last_appeared_clean
#@param col-name:last_appeared_clean
#@in table18
#@out table19
#@end core/mass-edit6
#@begin core/text-transform7#@desc Text transform on cells in column last_appeared_clean using expression value.toNumber()
#@param col-name:last_appeared_clean
#@param expression:value.toNumber()
#@in table19
#@out table20
#@end core/text-transform7
#@begin core/text-transform8#@desc Text transform on cells in column lowest_price using expression value.toNumber()
#@param col-name:lowest_price
#@param expression:value.toNumber()
#@in table20
#@out table21
#@end core/text-transform8
#@begin core/text-transform9#@desc Text transform on cells in column highest_price using expression value.toNumber()
#@param col-name:highest_price
#@param expression:value.toNumber()
#@in table21
#@out table22
#@end core/text-transform9
#@end Linear_OR
